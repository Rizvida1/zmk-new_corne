#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 40   // Increased for faster scrolling (was 25)

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 3 1>; };  // Increased scaling for faster scroll

&msc {
    acceleration-exponent = <2>;      // More aggressive acceleration (was 1)
    time-to-max-speed-ms = <25>;      // Even faster acceleration ramp-up (was 40)
    delay-ms = <0>;                   // No delay for immediate response
};

&mmv {
    time-to-max-speed-ms = <500>;     // Faster mouse acceleration (was 1000)
    acceleration-exponent = <1>;      // Smoother acceleration curve (was 2)
    trigger-period-ms = <12>;         // More responsive (was 16)
};

/* Homerow mods configuration */
// Key Layout for Eyelash Corne (42 keys + extras)
// Based on matrix transform and actual key bindings:
//
// Standard Keys (0-41):
// ┌───┬───┬───┬───┬───┬───┐              ┌───┐     ┌───┬───┬───┬───┬───┬───┐
// │ 0 │ 1 │ 2 │ 3 │ 4 │ 5 │              │ 6 │     │ 7 │ 8 │ 9 │10 │11 │12 │
// ├───┼───┼───┼───┼───┼───┤          ┌───┼───┼───┐ ├───┼───┼───┼───┼───┼───┤
// │13 │14 │15 │16 │17 │18 │          │19 │20 │21 │ │22 │23 │24 │25 │26 │27 │
// ├───┼───┼───┼───┼───┼───┤          └───┼───┼───┘ ├───┼───┼───┼───┼───┼───┤
// │28 │29 │30 │31 │32 │33 │  ┌───┐       │35 │     │36 │37 │38 │39 │40 │41 │
// └───┴───┴───┼───┼───┼───┤  │34 │       └───┘     ├───┼───┼───┼───┴───┴───┘
//             │36 │37 │38 │  └───┘                 │39 │40 │41 │
//             └───┴───┴───┘                        └───┴───┴───┘
//
// Special positioning for joystick/pointing:
//  6 = UP movement       19,20,21 = LEFT, CENTER/CLICK, RIGHT movement    35 = DOWN movement  
//
// Note: Encoder scroll is handled separately via sensor-bindings

#define KEYS_L 0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 34  // Left hand keys
#define KEYS_R 7 8 9 10 11 12 22 23 24 25 26 27 35 36 37 38 39 40 41  // Right hand keys (excluding joystick)
#define THUMBS 36 37 38 40 41  // Thumb keys (excluding space bar at 39)
#define POINTING 6 19 20 21 35  // Joystick cluster
#define QUICK_TAP_MS 300

// Create homerow mod behaviors

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    NAME: NAME { \
        compatible = "zmk,behavior-hold-tap"; \
        #binding-cells = <2>; \
        bindings = <HOLD>, <TAP>; \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        hold-trigger-on-release; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
    };

/ {
    behaviors {
        // Left-hand homerow mods

        MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS POINTING)

        // Right-hand homerow mods  

        MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS POINTING)

        shift_caps: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Word";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;

            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_copy {
            timeout-ms = <50>;
            key-positions = <30 31>; // X + C 
            bindings = <&kp LC(C)>;
            layers = <0>;
        };

        combo_paste {
            timeout-ms = <50>;
            key-positions = <31 32>; // C + V 
            bindings = <&kp LC(V)>;
            layers = <0>;
        };

        combo_cut {
            timeout-ms = <50>;
            key-positions = <30 32>; // X + V 
            bindings = <&kp LC(X)>;
            layers = <0>;
        };

        combo_undo {
            timeout-ms = <50>;
            key-positions = <29 30>; // Z + X
            bindings = <&kp LC(Z)>;
            layers = <0>;
        };

        combo_delete {
            timeout-ms = <50>;
            key-positions = <10 11>; // O + P corrected indices
            bindings = <&kp DEL>;
            layers = <0>;
        };

        combo_ctrl_d {
            timeout-ms = <50>;
            key-positions = <2 3>; // W + E
            bindings = <&kp LC(D)>;
            layers = <0>;
        };

        combo_ctrl_f {
            timeout-ms = <50>;
            key-positions = <17 18>; // F + G (Find + Go)
            bindings = <&kp LC(F)>;
            layers = <0>;
        };

        combo_ctrl_shift_f {
            timeout-ms = <50>;
            key-positions = <2 4>; // W + R
            bindings = <&kp LC(LS(F))>;
            layers = <0>;
        };

        combo_save {
            timeout-ms = <50>;
            key-positions = <1 2>; // Q + W
            bindings = <&kp LC(S)>;
            layers = <0>;
        };

        combo_copilot_inline {
            timeout-ms = <50>;
            key-positions = <10 9>; // I + O (adjacent on right hand row)
            bindings = <&kp LC(I)>; // Ctrl+I (GitHub Copilot inline suggestion)
            layers = <0>;
        };

        combo_all {
            bindings = <&kp LC(A)>;
            key-positions = <1 3>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_enter {
            bindings = <&kp RET>;
            key-positions = <23 17>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_terminal {
            bindings = <&kp LC(GRAVE)>;
            key-positions = <0 1>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_toggle_comment {
            bindings = <&kp LC(FSLH)>;
            key-positions = <40 41>; // . + /
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_rename {
            bindings = <&kp F2>;
            key-positions = <4 5>; // R + T (Rename + Tag/Type)
            timeout-ms = <50>;
            layers = <0>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <50>;  // Reduced for more responsive scrolling (was 100)
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Rizvi";
            bindings = <
&kp TAB      &kp Q        &kp W        &kp E         &kp R         &kp T                         &kp UP                &kp Y  &kp U         &kp I         &kp O        &kp P           &kp ESC
&shift_caps  &hml LGUI A  &hml LALT S  &hml LSHFT D  &hml LCTRL F  &kp G               &kp LEFT  &kp ENTER  &kp RIGHT  &kp H  &hmr LCTRL J  &hmr RSHFT K  &hmr LALT L  &hmr LGUI SEMI  &kp SQT
&kp LALT     &kp Z        &kp X        &kp C         &kp V         &kp B  &mkp MCLK              &kp DOWN              &kp N  &kp M         &kp COMMA     &kp DOT      &kp FSLH        &kp ENTER
                                       &kp LGUI      &lt 3 BSPC    &mo 2                                               &mo 1  &lt 3 SPACE   &kp RCTRL
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans           &kp N1           &kp N2          &kp N3           &kp N4           &kp N5                                               &kp C_PREV                   &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp INS
&bt BT_CLR_ALL   &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                                 &trans  &kp C_PLAY_PAUSE  &trans     &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&trans           &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_EFF  &mt LC(SPACE) LG(LA(K))             &kp C_NEXT                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                                  &kp LC(SPACE)    &kp DEL          &kp LA(TAB)                                                                       &trans           &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp LC(LA(DEL))  &kp EXCL      &kp AT        &kp HASH   &kp DLLR  &kp PRCNT                                 &mmv MOVE_UP                 &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans           &bt BT_CLR    &mkp MB4      &mkp MCLK  &mkp MB5  &mkp LCLK                 &mmv MOVE_LEFT  &mkp LCLK  &mmv MOVE_RIGHT   &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans           &out OUT_USB  &out OUT_BLE  &none      &none     &mkp RCLK  &kp LA(LS(DOWN))               &mmv MOVE_DOWN               &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                             &trans     &trans    &trans                                                                 &trans     &kp RET    &mkp RCLK
            >;

            sensor-bindings = <&inc_dec_kp LA(UP) LA(DOWN)>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2         &kp F3        &kp F4         &kp F5                                           &mmv MOVE_UP                     &kp F6  &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &trans      &kp LS(TAB)    &kp LALT      &kp TAB        &mkp MB4                         &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset  &trans         &bootloader   &trans         &mkp MB5  &mt LC(LS(T)) LC(W)                    &mmv MOVE_DOWN                   &trans  &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                           &trans        &kp BACKSPACE  &trans                                                                            &trans  &kp SPACE  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(TAB) LC(LS(TAB))>;
        };
    };
};
